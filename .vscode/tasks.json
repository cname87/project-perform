{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    // npm run start frontend - used by Start frontend launch configurations
    {
      "label": "npm start frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix", "${workspaceRoot}/frontend",
        "start",
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)" // matches any word to first sapace
          },
          "endsPattern": {
            "regexp": "Compiled | Failed to compile."
          }
        }
      }
    },
    // npm run test frontend - used by T frontend launch configuration
    {
      "label": "npm test frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix", "${workspaceRoot}/frontend",
        "test",
      ],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "TOTAL:"
          }
        }
      }
    },
    // "npm run start backend index.js"
    {
      "label": "npm start backend index.js",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix", "${workspaceRoot}/backend",
        "start",
      ],
      // "isBackground": true,
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    },
    // "npm backend server-side watch"
    {
      "label": "npm backend server-side watch",
      "type": "npm",
      "script": "tscServerWatch",
      "path": "backend/",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      }
    },
    // "npm backend client-side watch"
    {
      "label": "npm backend client-side watch",
      "type": "npm",
      "script": "tscClientWatch",
      "path": "backend/",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      }
    },
    // "npm build backend"
    {
      "label": "npm build backend",
      "type": "npm",
      "script": "build",
      "path": "backend/",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    // "npm build:dev frontend"
    {
      "label": "npm build:dev frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "build:dev"
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": "build",
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "Compiled |Failed to compile."
          }
        }
      }
    },
    // "Taskkill node.exe"
    {
      "label": "Taskkill node.exe",
      "type": "shell",
      "windows": {
        "command": "${workspaceFolder}/backend/utils/utils-build/taskkillNode.bat"
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    // "Is server up?"
    {
      "label": "Is Server Up?",
      "type": "process",
      "command": "node",
      "args": [
        "${workspaceFolder}/backend/dist/utils/utils-build/isServerUp.js"
      ],
      "options": {
        "env": {
          "NODE_ENV": "development",
          "DEBUG": "PP*",
          "DEBUG_COLORS": "true"
        }
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    // "Start server
    /* used as a preLaunchTask in a launch configuration (e.g. ng e2e) to start the server and wait until it is up, or just to pass back if the server is already started  */
    {
      "label": "Start Server",
      "type": "process",
      "command": "node",
      "args": [
        "${workspaceFolder}/backend/dist/utils/utils-build/startServer.js"
      ],
       /* Server running is a background task */
      "isBackground": true,
      "options": {
        "env": {
          "NODE_ENV": "development",
          "DEBUG": "PP*",
          "DEBUG_COLORS": "true"
        }
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      /* Background task so it needs a problem matcher to know when to pass control on to the launch configuration */
      "problemMatcher": [
        {
          "pattern": [
            { // dummy problem matcher (as we're not looking for problems)
              "regexp": ".",
              "file": 1,
              "location": 2,
              "message": 3
            }
          ],
          "background": {
            "activeOnStart": true,
            "beginsPattern": {
              "regexp": "(.*?)" // i.e. starts on anything from startServer - not important - I think it just starts looking for probems from here.
            },
            "endsPattern": "Connected to", // i.e. passes control on to the  launch configuration when it sees 'Connected to' from startServer.js, i.e. when 'Connected to newly-started server' or 'Connected to previously-started server' is output to console.log from startServer.js
          }
        }
      ]
    },
    // "npm delete nyc file"
    {
      "label": "npm delete nyc file",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/backend",
        "delNyc"
      ],
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "group": "build",
      "problemMatcher": []
    }
  ]
}
