openapi: 3.0.1
info:
  title: Project Perform API V1
  description: V1.x.x cover the API for one team
  contact:
    name: Sean Young
    email: cname@yahoo.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0-oas3
servers:
- url: https://localhost:1337/api-v1
  description: Development server
tags:
- name: admins
  description: Operations available to admins
- name: users
  description: Operations available to regular users
paths:
  /members:
    get:
      tags:
      - users
      summary: Returns the members of a team
      description: |
        Returns all team members
      operationId: getMembers
      parameters:
      - name: name
        in: query
        description: Pass an optional name search string to limit the returned list
        required: false
        style: form
        explode: true
        schema:
          maxLength: 35
          type: string
      responses:
        200:
          description: Members returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
        400:
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: The supplied match string does not match any team member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: The database service is not available now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: members
    put:
      tags:
      - admins
      summary: Updates a member in a team
      description: |
        Updates the data on a member of the team
      operationId: updateMember
      requestBody:
        description: Team member to be updated detail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
        x-name: member
      responses:
        200:
          description: Member updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        400:
          description: The request is not a valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: A member with that ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: The database service is not available now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: members
    post:
      tags:
      - admins
      summary: Adds a member to a team
      description: |
        Adds a supplied member to the team
      operationId: addMember
      requestBody:
        description: Team member detail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
        x-name: member
      responses:
        201:
          description: Member created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        400:
          description: The request is not a valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: A member with that ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: The database service is not available now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: members
  /members/{id}:
    get:
      tags:
      - users
      summary: Returns a specific team member
      description: |
        Obtain information about a specific team member
      operationId: getMember
      parameters:
      - name: id
        in: path
        description: The ID of the team member
        required: true
        style: simple
        explode: false
        schema:
          maximum: 999
          minimum: 1
          type: integer
          format: int32
      responses:
        200:
          description: Member information returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        400:
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: A member with the supplied member ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: The database service is not available now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: members
    delete:
      tags:
      - admins
      summary: Deletes a member from a team
      description: |
        Deletes a member from the team
      operationId: deleteMember
      parameters:
      - name: id
        in: path
        description: The ID of the team member
        required: true
        style: simple
        explode: false
        schema:
          maximum: 999
          minimum: 1
          type: integer
          format: int32
      responses:
        200:
          description: Member deleted
        400:
          description: The request is not a valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: A member with that ID does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        503:
          description: The database service is not available now
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: members
components:
  schemas:
    Member:
      required:
      - id
      - name
      type: object
      properties:
        id:
          maximum: 999
          minimum: 1
          type: integer
          format: int32
          example: 5
        name:
          maxLength: 35
          type: string
          format: string
          example: John Athlete
      description: Team member information
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 5
        message:
          type: string
          format: string
          example: Not found
      description: Error
